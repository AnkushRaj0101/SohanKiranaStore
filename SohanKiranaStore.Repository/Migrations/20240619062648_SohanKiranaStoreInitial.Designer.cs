// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SohanKiranaStore.Repository.DBContect;

#nullable disable

namespace SohanKiranaStore.Repository.Migrations
{
    [DbContext(typeof(SohanKiranaContext))]
    [Migration("20240619062648_SohanKiranaStoreInitial")]
    partial class SohanKiranaStoreInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedBy")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedBy")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9715),
                            Description = "Drinks and beverages",
                            Name = "Beverages",
                            UpdatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9716)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9717),
                            Description = "Snacks and munchies",
                            Name = "Snacks",
                            UpdatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9718)
                        });
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Description", b =>
                {
                    b.Property<int>("DescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OtherProductInfo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("DescriptionId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Descriptions");

                    b.HasData(
                        new
                        {
                            DescriptionId = 1,
                            Features = "Carbonated, Sweet",
                            OtherProductInfo = "Best served chilled",
                            ProductDescription = "Refreshing Coca Cola",
                            ProductId = 1
                        },
                        new
                        {
                            DescriptionId = 2,
                            Features = "Carbonated, Sweet",
                            OtherProductInfo = "Best served chilled",
                            ProductDescription = "Refreshing Pepsi",
                            ProductId = 2
                        },
                        new
                        {
                            DescriptionId = 3,
                            Features = "Crunchy, Salty",
                            OtherProductInfo = "Best enjoyed as a snack",
                            ProductDescription = "Crispy Lays Chips",
                            ProductId = 3
                        },
                        new
                        {
                            DescriptionId = 4,
                            Features = "Crunchy, Flavorful",
                            OtherProductInfo = "Perfect for parties",
                            ProductDescription = "Tasty Doritos",
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedBy")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedBy")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CreatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9795),
                            Name = "Coca Cola",
                            UpdatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9795)
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            CreatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9796),
                            Name = "Pepsi",
                            UpdatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9797)
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            CreatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9797),
                            Name = "Lays Chips",
                            UpdatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9798)
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            CreatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9798),
                            Name = "Doritos",
                            UpdatedBy = new DateTime(2024, 6, 19, 6, 26, 48, 368, DateTimeKind.Utc).AddTicks(9799)
                        });
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.ProductSize", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SizeId = 1,
                            Discount = 0,
                            NetPrice = 15.0m,
                            Price = 15.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 1,
                            SizeId = 2,
                            Discount = 0,
                            NetPrice = 10.0m,
                            Price = 10.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 1,
                            SizeId = 3,
                            Discount = 0,
                            NetPrice = 5.0m,
                            Price = 5.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 2,
                            SizeId = 1,
                            Discount = 0,
                            NetPrice = 15.0m,
                            Price = 15.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 2,
                            SizeId = 2,
                            Discount = 0,
                            NetPrice = 10.0m,
                            Price = 10.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 2,
                            SizeId = 3,
                            Discount = 0,
                            NetPrice = 5.0m,
                            Price = 5.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 3,
                            SizeId = 4,
                            Discount = 0,
                            NetPrice = 20.0m,
                            Price = 20.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 3,
                            SizeId = 5,
                            Discount = 0,
                            NetPrice = 10.0m,
                            Price = 10.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 4,
                            SizeId = 4,
                            Discount = 0,
                            NetPrice = 25.0m,
                            Price = 25.0m,
                            Status = "Available"
                        },
                        new
                        {
                            ProductId = 4,
                            SizeId = 5,
                            Discount = 0,
                            NetPrice = 12.5m,
                            Price = 12.5m,
                            Status = "Available"
                        });
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SizeId");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            Description = "1 Liter"
                        },
                        new
                        {
                            SizeId = 2,
                            Description = "500 ml"
                        },
                        new
                        {
                            SizeId = 3,
                            Description = "250 ml"
                        },
                        new
                        {
                            SizeId = 4,
                            Description = "1 Kg"
                        },
                        new
                        {
                            SizeId = 5,
                            Description = "500 grams"
                        });
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Description", b =>
                {
                    b.HasOne("SohanKiranaStore.Model.Models.Product", "Product")
                        .WithOne("Description")
                        .HasForeignKey("SohanKiranaStore.Model.Models.Description", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Product", b =>
                {
                    b.HasOne("SohanKiranaStore.Model.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.ProductSize", b =>
                {
                    b.HasOne("SohanKiranaStore.Model.Models.Product", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SohanKiranaStore.Model.Models.Size", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Product", b =>
                {
                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("ProductSizes");
                });

            modelBuilder.Entity("SohanKiranaStore.Model.Models.Size", b =>
                {
                    b.Navigation("ProductSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
